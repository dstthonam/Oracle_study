
-- PROCEDURE에 PARAMETER 지정하기
SET SERVEROUTPUT ON SIZE UNLIMITED;  
CREATE OR REPLACE PROCEDURE PRO_PARAM_IN (
    PARAM1 IN NUMBER,
    PARAM2 NUMBER,
    PARAM3 NUMBER := 3,
    PARAM4 NUMBER DEFAULT 4
)
IS

BEGIN
    DBMS_OUTPUT.PUT_LINE('PARAM1 : ' || PARAM1);
    DBMS_OUTPUT.PUT_LINE('PARAM2 : ' || PARAM2);
    DBMS_OUTPUT.PUT_LINE('PARAM3 : ' || PARAM3);
    DBMS_OUTPUT.PUT_LINE('PARAM4 : ' || PARAM4);
END;
/

EXECUTE PRO_PARAM_IN(1, 2);
EXECUTE PRO_PARAM_IN(1);


EXECUTE PRO_PARAM_IN(1, 2, 9, 8);

SET SERVEROUTPUT ON SIZE UNLIMITED;  
CREATE OR REPLACE PROCEDURE PRO_PARAM1_IN (
    PARAM1 IN NUMBER,
    PARAM2 NUMBER := 3,
    PARAM3 NUMBER,
    PARAM4 NUMBER DEFAULT 4
)
IS

BEGIN
    DBMS_OUTPUT.PUT_LINE('PARAM1 : ' || PARAM1);
    DBMS_OUTPUT.PUT_LINE('PARAM2 : ' || PARAM2);
    DBMS_OUTPUT.PUT_LINE('PARAM3 : ' || PARAM3);
    DBMS_OUTPUT.PUT_LINE('PARAM4 : ' || PARAM4);
END;
/

-- PARAMETER NAME을 활용하여 PROCEDURE에 값 입력 
EXECUTE PRO_PARAM1_IN(1,2,3);

EXECUTE PRO_PARAM_IN(PARAM1 => 10, PARAM2 => 20);

EXECUTE PRO_PARAM1_IN(PARAM1 => 10, PARAM3 => 30);

EXECUTE PRO_PARAM1_IN(10, 30, PARAM3 => 100);


-- OUT MODE PARAMETER 사용하기
CREATE OR REPLACE PROCEDURE PRO_PARAM_OUT (
    IN_EMPNO IN EMP.EMPNO%TYPE,
    OUT_ENAME OUT EMP.ENAME%TYPE,
    OUT_SAL OUT EMP.SAL%TYPE
)
IS

BEGIN
    SELECT E.ENAME, E.SAL
        INTO OUT_ENAME, OUT_SAL
        FROM EMP E
        WHERE E.EMPNO = IN_EMPNO;

END PRO_PARAM_OUT;
/

DECLARE
    V_ENAME EMP.ENAME%TYPE;
    V_SAL EMP.SAL%TYPE;

BEGIN
    SCOTT.PRO_PARAM_OUT(7839, V_ENAME, V_SAL);
    DBMS_OUTPUT.PUT_LINE('ENAME : ' || V_ENAME);
    DBMS_OUTPUT.PUT_LINE('SAL : ' || V_SAL);
END;
/


-- IN OUT MODE PARAMETER 사용하기
CREATE OR REPLACE PROCEDURE PRO_PARAM_INOUT (
    INOUT_NO IN OUT NUMBER
)
IS

BEGIN
    INOUT_NO := INOUT_NO * 2;

END PRO_PARAM_INOUT;
/

DECLARE
    NO NUMBER;

BEGIN
    NO := 5;
    PRO_PARAM_INOUT(NO);
    DBMS_OUTPUT.PUT_LINE('NO : ' || NO);

END;
/

SELECT * FROM EMP;
