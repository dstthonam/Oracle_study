SET SERVEROUTPUT ON SIZE UNLIMITED;  

-- 조건에 맞는 값을 EX3_6 테이블에 넣기EMPLOYEES
CREATE TABLE EX3_6 
AS SELECT * 
    FROM EMPLOYEES E
    WHERE E.MANAGER_ID = 124
    AND E.SALARY BETWEEN 2000 AND 3000
;

SELECT * FROM EX3_6;

-- 다음 문장을 실행
CREATE TABLE EX3_3 (
    EMPLOYEE_ID NUMBER,
    BOUNUS_AMT  NUMBER DEFAULT 0
);

INSERT INTO EX3_3(EMPLOYEE_ID)
    SELECT E.EMPLOYEE_ID
        FROM EMPLOYEES E, SALES S
        WHERE E.EMPLOYEE_ID = S.EMPLOYEE_ID
        AND S.SALES_MONTH BETWEEN '200010' AND '200012'
        GROUP BY E.EMPLOYEE_ID
    ;

-- MERGE문 실행 // WHEN NOT MATCHED THEN UPDATE => X
MERGE INTO EX3_3 T
    USING (SELECT E.EMPLOYEE_ID, E.SALARY
            FROM EMPLOYEES E
            WHERE E.MANAGER_ID = 145) E
        ON (T.EMPLOYEE_ID = E.EMPLOYEE_ID)
    WHEN MATCHED THEN
        UPDATE SET T.BOUNUS_AMT = E.SALARY * 0.01
    WHEN NOT MATCHED THEN
        INSERT (EMPLOYEE_ID, BOUNUS_AMT)
        VALUES (E.EMPLOYEE_ID, E.SALARY * 0.005);

-- IS NULL / IS NOT NULL
SELECT * FROM EMPLOYEES A
    WHERE A.COMMISSION_PCT IS NULL
;

SELECT * FROM EMPLOYEES A
    WHERE A.COMMISSION_PCT IS NOT NULL
;

-- 논리 연산자로 변환
SELECT EMPLOYEE_ID, salary FROM EMPLOYEES
    WHERE SALARY >= 2000 AND SALARY <= 2500
    ORDER BY EMPLOYEE_ID
    ;

-- ANY/ALL 사용
SELECT E.EMPLOYEE_ID, E.salary
    FROM EMPLOYEES E
    WHERE E.SALARY = ANY(2000, 3000, 4000)
    ORDER BY EMPLOYEE_ID
    ;

SELECT E.EMPLOYEE_ID, E.salary
    FROM EMPLOYEES E
    WHERE E.SALARY != ALL(2000, 3000, 4000)
    ORDER BY EMPLOYEE_ID
    ;

COMMIT;
ROLLBACK;

SELECT * FROM EX3_3;
SELECT * FROM SALES;
SELECT * FROM EMPLOYEES;
SELECT * FROM USER_TABLES;
