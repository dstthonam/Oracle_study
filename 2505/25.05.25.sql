SET SERVEROUTPUT ON SIZE UNLIMITED;  

SELECT D.DEPARTMENT_ID, LPAD(' ', 3 * (LEVEL - 1)) || D.DEPARTMENT_NAME, LEVEL
    FROM DEPARTMENTS D
    START WITH PARENT_ID IS NULL
    CONNECT BY PRIOR DEPARTMENT_ID = D.PARENT_ID
    ;


SELECT A.* --A.DEPARTMENT_ID, LPAD(' ', 3*(LEVEL-1)) || A.DEPARTMENT_NAME, LEVEL
    FROM DEPARTMENTS A
    START WITH PARENT_ID IS NULL
    CONNECT BY PRIOR A.PARENT_ID = A.DEPARTMENT_ID
    ;

SELECT E.EMPLOYEE_ID, LPAD(' ', 3*(LEVEL-1)) || E.EMP_NAME,
        LEVEL, D.DEPARTMENT_NAME
    FROM EMPLOYEES E, DEPARTMENTS D 
    WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
    START WITH E.MANAGER_ID IS NULL
    CONNECT BY PRIOR E.EMPLOYEE_ID = E.MANAGER_ID
    ;
SELECT A.EMPLOYEE_ID, LPAD(' ', 3 * (LEVEL-1)) || A.EMP_NAME AS EMPNAME,
        LEVEL, B.DEPARTMENT_NAME, A.DEPARTMENT_ID
    FROM EMPLOYEES A
    INNER JOIN DEPARTMENTS B ON (A.DEPARTMENT_ID = B.DEPARTMENT_ID)
    START WITH A.MANAGER_ID IS NULL
    CONNECT BY PRIOR A.EMPLOYEE_ID = A.MANAGER_ID
    ;

SELECT A.EMPLOYEE_ID, LPAD(' ', 3 * (LEVEL-1)) || A.EMP_NAME,
        LEVEL, B.DEPARTMENT_NAME, A.DEPARTMENT_ID
    FROM EMPLOYEES A
    INNER JOIN DEPARTMENTS B ON (A.DEPARTMENT_ID = B.DEPARTMENT_ID)
    --WHERE A.DEPARTMENT_ID = 30
    START WITH A.MANAGER_ID IS NULL
    CONNECT BY PRIOR A.EMPLOYEE_ID = A.MANAGER_ID
    ;

SELECT A.*, B.* 
        --A.EMPLOYEE_ID, LPAD(' ', 3 * (LEVEL-1)) || A.EMP_NAME,
        --LEVEL, B.DEPARTMENT_NAME, B.DEPARTMENT_ID
    FROM EMPLOYEES A
    INNER JOIN DEPARTMENTS B ON (A.DEPARTMENT_ID = B.DEPARTMENT_ID)
    START WITH A.MANAGER_ID IS NULL
    CONNECT BY PRIOR A.EMPLOYEE_ID = A.MANAGER_ID
    AND A.DEPARTMENT_ID = 30
    ;


SELECT A.EMPLOYEE_ID, LPAD(' ', 3 * (LEVEL-1)) || A.EMP_NAME,
        LEVEL, B.DEPARTMENT_NAME, A.DEPARTMENT_ID
    FROM EMPLOYEES A
    INNER JOIN DEPARTMENTS B ON (A.DEPARTMENT_ID = B.DEPARTMENT_ID)
    --WHERE A.DEPARTMENT_ID = 30
    START WITH A.MANAGER_ID IS NULL
    CONNECT BY PRIOR A.EMPLOYEE_ID = A.MANAGER_ID
    ORDER SIBLINGS BY DEPARTMENT_NAME
    ;

SELECT A.DEPARTMENT_ID, LPAD(' ', 3 * (LEVEL-1)) || A.DEPARTMENT_NAME,
        LEVEL, CONNECT_BY_ROOT A.DEPARTMENT_NAME AS ROOT_NAME
    FROM DEPARTMENTS A
    START WITH A.PARENT_ID IS NULL
    CONNECT BY PRIOR A.DEPARTMENT_ID = A.PARENT_ID
    ;

SELECT A.DEPARTMENT_ID, LPAD(' ', 3 * (LEVEL-1)) || A.DEPARTMENT_NAME,
        LEVEL, CONNECT_BY_ISLEAF AS LEAF_NODE
    FROM DEPARTMENTS A
    START WITH A.PARENT_ID IS NULL
    CONNECT BY PRIOR A.DEPARTMENT_ID = A.PARENT_ID
    ;

SELECT A.DEPARTMENT_ID, LPAD(' ', 3 * (LEVEL-1)) || A.DEPARTMENT_NAME,
        LEVEL, SYS_CONNECT_BY_PATH(A.DEPARTMENT_NAME, '|') AS PATH
    FROM DEPARTMENTS A
    START WITH A.PARENT_ID IS NULL
    CONNECT BY A.PARENT_ID = PRIOR A.DEPARTMENT_ID
    ;

SELECT A.DEPARTMENT_ID, LPAD(' ', 3 * (LEVEL-1)) || A.DEPARTMENT_NAME,
        LEVEL, SYS_CONNECT_BY_PATH(A.DEPARTMENT_NAME, '/') AS PATH
    FROM DEPARTMENTS A
    START WITH A.PARENT_ID IS NULL
    CONNECT BY A.PARENT_ID = PRIOR A.DEPARTMENT_ID
    ;

SELECT * FROM ALL_DIRECTORIES A;
SHOW USER;
select name from v$database;
select * from all_users;
select * from DBA_objects;

select username, default_tablespace,temporary_tablespace from dba_users
WHERE USERNAME = 'ORCLSTUDY';

GRANT READ,WRITE ON DIRECTORY DATA_PUMP_DIR TO ORCLSTUDY;

SELECT * FROM NLS_DATABASE_PARAMETERS WHERE PARAMETER LIKE '%CHARACTERSET%';
SELECT * FROM dba_invalid_objects WHERE status = 'INVALID';
SELECT OBJECT_TYPE, OWNER, OBJECT_NAME FROM DBA_OBJECTS WHERE STATUS = 'INVALID';
SELECT OWNER, OBJECT_NAME, OBJECT_TYPE, STATUS FROM DBA_OBJECTS WHERE STATUS = 'INVALID' AND OWNER = 'SYS';


SELECT * FROM NLS_DATABASE_PARAMETERS WHERE PARAMETER = 'NLS_CHARACTERSET';

ALTER PACKAGE SYS.KUPF$FILE COMPILE PACKAGE;
ALTER PACKAGE SYS.KUPF$FILE COMPILE BODY;

ALTER PACKAGE SYS.DBMS_METADATA_UTIL COMPILE PACKAGE;
ALTER PACKAGE SYS.DBMS_METADATA_UTIL COMPILE BODY;

SELECT * FROM USER_SOURCE WHERE NAME='DBMS_METADATA_UTIL' ORDER BY LINE;
DROP PROCEDURE SCOTT.PRO_ERR;

SELECT USERNAME, DEFAULT_TABLESPACE FROM dba_users where username = 'ORCLSTUDY';
SELECT TABLESPACE_NAME, FILE_NAME, BYTES FROM dba_data_files;

CREATE DIRECTORY ORA_DEV_PUMP AS 'X:\oracle\product\oradata\PUMP';


expdp ORCLSTUDY/1234 DIRECTORY=DATA_PUMP_DIR dumpfile=expdp_ORCLSTUDY_20250526.dmp logfile=expdp_ORCLSTUDY_20250526.log FULL=Y

EXEC DBMS_UTILITY.compile_schema(schema => 'SYS');

SELECT DBMS_METADATA.GET_DDL('TABLE', '테이블명', 'ORCLSTUDY') FROM DUAL;

SET SERVEROUTPUT ON
DECLARE
  v_ddl CLOB;
BEGIN
  FOR t IN (SELECT table_name FROM all_tables WHERE owner = 'ORCLSTUDY') LOOP
    BEGIN
      v_ddl := DBMS_METADATA.GET_DDL('TABLE', t.table_name, 'ORCLSTUDY');
      DBMS_OUTPUT.PUT_LINE('OK: ' || t.table_name);
    EXCEPTION
      WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR in ' || t.table_name || ': ' || SQLERRM);
    END;
  END LOOP;
END;